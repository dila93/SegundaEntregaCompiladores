
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xef\xeb\x06@\x86*PZ\xa50\xc7\x03\x1b7D`'
    
_lr_action_items = {'RETURN':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,3,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,3,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,3,-53,-52,-11,-25,-26,3,-21,-21,-12,-16,-14,3,-21,3,-17,-21,-15,]),'MODEQ':([15,27,],[34,34,]),'NUMBER':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,4,-1,-32,4,-2,-35,-3,-24,-34,-10,4,-61,4,4,-27,-24,-13,-51,4,4,4,4,4,4,-49,4,4,-50,-48,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-40,-22,4,-47,-36,4,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,4,4,4,-53,-52,-11,-25,-26,4,-21,-21,-12,4,-16,4,-14,4,-21,4,-17,-21,-15,]),'NE':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,52,-27,-24,52,-49,-50,-48,-40,-47,52,-36,52,52,52,52,52,52,52,52,52,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,52,52,-25,-26,52,52,]),'SUBEQ':([15,27,],[35,35,]),'DEC':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,17,-1,-32,17,-2,-35,-3,38,-34,-10,17,-61,17,17,-27,38,-13,-51,17,17,17,17,17,17,-49,17,17,-50,-48,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-40,-22,17,-47,-36,17,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,17,17,17,-53,-52,-11,-25,-26,17,-21,-21,-12,17,-16,17,-14,17,-21,17,-17,-21,-15,]),'if':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,5,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,5,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,5,-53,-52,-11,-25,-26,5,-21,-21,-12,-16,-14,5,-21,5,-17,-21,-15,]),'LE':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,54,-27,-24,54,-49,-50,-48,-40,-47,54,-36,54,54,54,54,54,54,54,54,54,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,54,54,-25,-26,54,54,]),'%':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,45,-27,-24,45,-49,-50,-48,-40,-47,45,-36,45,45,45,45,45,45,45,45,45,45,-37,-33,45,-30,45,45,-31,45,45,45,45,45,45,-25,-26,45,45,]),'EXPONENT':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,46,-27,-24,46,-49,-50,-48,46,-47,46,-36,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-25,-26,46,46,]),'for':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,6,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,6,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,6,-53,-52,-11,-25,-26,6,-21,-21,-12,-16,-14,6,-21,6,-17,-21,-15,]),')':([4,9,16,26,27,28,38,41,42,58,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,100,101,103,104,105,114,116,],[-32,-35,-34,-27,-24,66,-49,-50,-48,-40,-47,95,-19,-36,99,100,101,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,102,-61,-25,-26,109,-58,-60,-59,118,]),'(':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,18,19,20,21,22,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,7,-1,-63,-32,24,25,7,-2,-35,31,32,-3,33,-24,-34,-10,57,7,-61,-20,7,7,-27,-24,-13,-51,7,7,7,7,7,7,-49,7,7,-50,-48,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-40,-22,7,94,-47,-36,7,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,7,7,7,-53,-52,-11,-25,-26,7,-21,-21,-12,7,-16,7,-14,7,-21,7,-17,-21,-15,]),'+':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,47,-27,-24,47,-49,-50,-48,-40,-47,47,-36,47,47,47,47,47,47,47,47,47,47,-37,-33,-28,-30,-29,47,-31,47,47,47,47,47,47,-25,-26,47,47,]),'*':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,48,-27,-24,48,-49,-50,-48,-40,-47,48,-36,48,48,48,48,48,48,48,48,48,48,-37,-33,48,-30,48,48,-31,48,48,48,48,48,48,-25,-26,48,48,]),'-':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,49,-27,-24,49,-49,-50,-48,-40,-47,49,-36,49,49,49,49,49,49,49,49,49,49,-37,-33,-28,-30,-29,49,-31,49,49,49,49,49,49,-25,-26,49,49,]),',':([4,9,16,26,27,29,30,38,41,42,58,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,100,101,103,104,105,114,],[-32,-35,-34,-27,-24,67,-51,-49,-50,-48,-40,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-61,-53,-52,-25,-26,110,-58,-60,-59,]),'/':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,51,-27,-24,51,-49,-50,-48,-40,-47,51,-36,51,51,51,51,51,51,51,51,51,51,-37,-33,51,-30,51,51,-31,51,51,51,51,51,51,-25,-26,51,51,]),'LT':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,53,-27,-24,53,-49,-50,-48,-40,-47,53,-36,53,53,53,53,53,53,53,53,53,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,53,53,-25,-26,53,53,]),'MULEQ':([15,27,],[36,36,]),'ADDEQ':([15,27,],[37,37,]),'print':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,10,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,10,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,10,-53,-52,-11,-25,-26,10,-21,-21,-12,-16,-14,10,-21,10,-17,-21,-15,]),';':([4,9,16,26,27,38,41,42,58,62,64,65,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,100,101,107,],[-32,-35,-34,-27,-24,-49,-50,-48,-40,-47,-19,96,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-25,-26,112,]),'=':([15,27,],[39,39,]),'DIVEQ':([15,27,],[40,40,]),'$end':([0,1,2,4,8,9,13,15,16,18,26,27,29,30,38,41,42,58,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,98,99,100,101,106,108,109,111,113,117,119,120,121,],[-61,0,-1,-32,-2,-35,-3,-24,-34,-10,-27,-24,-13,-51,-49,-50,-48,-40,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-18,-53,-52,-11,-25,-26,-21,-21,-12,-16,-14,-21,-17,-21,-15,]),'GT':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,44,-27,-24,44,-49,-50,-48,-40,-47,44,-36,44,44,44,44,44,44,44,44,44,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,44,44,-25,-26,44,44,]),'STRING':([10,67,],[30,97,]),'read':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,12,-1,-32,12,-2,-35,-3,-24,-34,-10,12,-61,12,12,-27,-24,-13,-51,12,12,12,12,12,12,-49,12,12,-50,-48,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-40,-22,12,-47,-36,12,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,12,12,12,-53,-52,-11,-25,-26,12,-21,-21,-12,12,-16,12,-14,12,-21,12,-17,-21,-15,]),'BLTIN':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,14,-1,-32,14,-2,-35,-3,-24,-34,-10,14,-61,14,14,-27,-24,-13,-51,14,14,14,14,14,14,-49,14,14,-50,-48,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-40,-22,14,-47,-36,14,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,14,14,14,-53,-52,-11,-25,-26,14,-21,-21,-12,14,-16,14,-14,14,-21,14,-17,-21,-15,]),'ELSE':([4,9,16,18,26,27,29,30,38,41,42,58,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,97,98,99,100,101,106,108,109,111,113,117,119,120,121,],[-32,-35,-34,-10,-27,-24,-13,-51,-49,-50,-48,-40,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-18,-53,-52,-11,-25,-26,-21,-21,-12,115,-14,-21,-17,-21,-15,]),'GE':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,50,-27,-24,50,-49,-50,-48,-40,-47,50,-36,50,50,50,50,50,50,50,50,50,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,50,50,-25,-26,50,50,]),'EQ':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,55,-27,-24,55,-49,-50,-48,-40,-47,55,-36,55,55,55,55,55,55,55,55,55,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,55,55,-25,-26,55,55,]),'ID':([0,1,2,4,7,8,9,13,15,16,17,18,20,21,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,15,-1,-32,27,-2,-35,-3,-24,-34,42,-10,27,-61,62,27,27,-27,-24,-13,-51,27,69,27,27,27,27,27,-49,27,27,-50,-48,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-40,-22,27,-47,-36,27,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,27,27,27,-53,-52,-11,-25,-26,27,-21,-21,-12,27,-16,27,-14,27,-21,27,-17,-21,-15,]),'AND':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,43,-27,-24,43,-49,-50,-48,-40,-47,43,-36,43,43,43,43,43,43,43,43,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,43,43,-25,-26,43,43,]),'while':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,19,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,19,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,19,-53,-52,-11,-25,-26,19,-21,-21,-12,-16,-14,19,-21,19,-17,-21,-15,]),'NOT':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,20,-1,-32,20,-2,-35,-3,-24,-34,-10,20,-61,20,20,-27,-24,-13,-51,20,20,20,20,20,20,-49,20,20,-50,-48,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-40,-22,20,-47,-36,20,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,20,20,20,-53,-52,-11,-25,-26,20,-21,-21,-12,20,-16,20,-14,20,-21,20,-17,-21,-15,]),'{':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,21,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,21,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,21,-53,-52,-11,-25,-26,21,-21,-21,-12,-16,-14,21,-21,21,-17,-21,-15,]),'}':([4,9,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,97,98,99,100,101,106,108,109,111,113,117,119,120,121,],[-32,-35,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,93,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,-53,-52,-11,-25,-26,-21,-21,-12,-16,-14,-21,-17,-21,-15,]),'OR':([4,8,9,15,16,18,26,27,28,38,41,42,58,62,64,66,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,98,100,101,105,114,],[-32,-27,-35,-24,-34,56,-27,-24,56,-49,-50,-48,-40,-47,56,-36,56,56,56,56,56,56,56,56,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,56,-25,-26,56,56,]),'procedure':([0,1,2,4,8,9,13,15,16,18,21,26,27,29,30,38,41,42,58,59,60,62,66,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,97,98,99,100,101,102,106,108,109,111,113,115,117,118,119,120,121,],[-61,22,-1,-32,-2,-35,-3,-24,-34,-10,-61,-27,-24,-13,-51,-49,-50,-48,-40,-22,22,-47,-36,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,22,-53,-52,-11,-25,-26,22,-21,-21,-12,-16,-14,22,-21,22,-17,-21,-15,]),'INC':([0,1,2,4,7,8,9,13,15,16,18,20,21,24,25,26,27,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,66,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,106,108,109,110,111,112,113,115,117,118,119,120,121,],[-61,23,-1,-32,23,-2,-35,-3,41,-34,-10,23,-61,23,23,-27,41,-13,-51,23,23,23,23,23,23,-49,23,23,-50,-48,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-40,-22,23,-47,-36,23,-9,-6,-7,-5,-4,-8,-39,-42,-37,-33,-28,-30,-29,-44,-31,-46,-41,-43,-45,-38,-23,-18,23,23,23,-53,-52,-11,-25,-26,23,-21,-21,-12,23,-16,23,-14,23,-21,23,-17,-21,-15,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([1,7,20,24,25,31,33,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,67,94,95,96,102,110,112,115,118,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return':([1,60,95,102,115,118,],[11,11,11,11,11,11,]),'expr':([1,7,20,24,25,31,33,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,67,94,95,96,102,110,112,115,118,],[18,28,58,64,64,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,64,18,98,105,18,64,18,114,64,18,18,]),'list':([0,],[1,]),'begin':([22,],[61,]),'stmt':([1,60,95,102,115,118,],[13,92,106,108,117,120,]),'asgn':([1,7,20,24,25,31,33,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,67,94,95,96,102,110,112,115,118,],[8,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'prlist':([10,],[29,]),'cond':([24,25,57,96,112,],[63,65,91,107,116,]),'stmtlist':([21,],[60,]),'factor':([1,7,20,24,25,31,33,34,35,36,37,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,67,94,95,96,102,110,112,115,118,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'end':([106,108,117,120,],[111,113,119,121,]),'arglist':([94,],[103,]),'empty':([0,21,94,],[2,59,104,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> list","S'",1,None,None,None),
  ('list -> empty','list',1,'p_list_empty','Parser.py',20),
  ('list -> list asgn','list',2,'p_list_asgn','Parser.py',29),
  ('list -> list stmt','list',2,'p_list_stmt','Parser.py',35),
  ('asgn -> ID = expr','asgn',3,'p_asgn_assign','Parser.py',44),
  ('asgn -> ID ADDEQ expr','asgn',3,'p_asgn_addeq','Parser.py',48),
  ('asgn -> ID SUBEQ expr','asgn',3,'p_asgn_subeq','Parser.py',52),
  ('asgn -> ID MULEQ expr','asgn',3,'p_asgn_muleq','Parser.py',56),
  ('asgn -> ID DIVEQ expr','asgn',3,'p_asgn_diveq','Parser.py',61),
  ('asgn -> ID MODEQ expr','asgn',3,'p_asgn_modeq','Parser.py',65),
  ('stmt -> expr','stmt',1,'p_stmt_expr','Parser.py',70),
  ('stmt -> return ( expr )','stmt',4,'p_stmt_returnexpr','Parser.py',74),
  ('stmt -> procedure begin ( arglist )','stmt',5,'p_stmt_procedure','Parser.py',78),
  ('stmt -> print prlist','stmt',2,'p_stmt_print','Parser.py',82),
  ('stmt -> while ( cond ) stmt end','stmt',6,'p_stmt_while','Parser.py',86),
  ('stmt -> for ( cond ; cond ; cond ) stmt end','stmt',10,'p_stmt_for','Parser.py',90),
  ('stmt -> if ( cond ) stmt end','stmt',6,'p_stmt_if','Parser.py',94),
  ('stmt -> if ( cond ) stmt end ELSE stmt end','stmt',9,'p_stmt_elif','Parser.py',98),
  ('stmt -> { stmtlist }','stmt',3,'p_stmt_stmtlist','Parser.py',102),
  ('cond -> expr','cond',1,'p_cond','Parser.py',107),
  ('begin -> <empty>','begin',0,'p_begin','Parser.py',111),
  ('end -> <empty>','end',0,'p_end','Parser.py',115),
  ('stmtlist -> empty','stmtlist',1,'p_stmtlist','Parser.py',119),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist_stmtl_stmt','Parser.py',127),
  ('expr -> ID','expr',1,'p_expr_id','Parser.py',136),
  ('term -> read ( ID )','term',4,'p_expr_read','Parser.py',141),
  ('expr -> BLTIN ( expr )','expr',4,'p_expr_bltin','Parser.py',145),
  ('expr -> asgn','expr',1,'p_expr_asgn','Parser.py',149),
  ('expr -> expr + expr','expr',3,'p_expr_plus','Parser.py',154),
  ('expr -> expr - expr','expr',3,'p_expr_minus','Parser.py',159),
  ('expr -> expr * expr','expr',3,'p_expr_times','Parser.py',164),
  ('expr -> expr / expr','expr',3,'p_expr_divide','Parser.py',170),
  ('expr -> NUMBER','expr',1,'p_expr_num','Parser.py',175),
  ('expr -> expr EXPONENT expr','expr',3,'p_expr_exponent','Parser.py',180),
  ('expr -> term','expr',1,'p_expr_term','Parser.py',184),
  ('term -> factor','term',1,'p_term_factor','Parser.py',188),
  ('factor -> ( expr )','factor',3,'p_factor_expr','Parser.py',193),
  ('expr -> expr % expr','expr',3,'p_expr_mod','Parser.py',198),
  ('expr -> expr OR expr','expr',3,'p_expr_or','Parser.py',203),
  ('expr -> expr AND expr','expr',3,'p_expr_and','Parser.py',208),
  ('expr -> NOT expr','expr',2,'p_expr_not','Parser.py',213),
  ('expr -> expr LT expr','expr',3,'p_expr_lt','Parser.py',218),
  ('expr -> expr GT expr','expr',3,'p_expr_gt','Parser.py',223),
  ('expr -> expr LE expr','expr',3,'p_expr_le','Parser.py',228),
  ('expr -> expr GE expr','expr',3,'p_expr_ge','Parser.py',233),
  ('expr -> expr EQ expr','expr',3,'p_expr_eq','Parser.py',238),
  ('expr -> expr NE expr','expr',3,'p_expr_ne','Parser.py',243),
  ('expr -> INC ID','expr',2,'p_expr_incleft','Parser.py',248),
  ('expr -> DEC ID','expr',2,'p_expr_decleft','Parser.py',253),
  ('expr -> ID DEC','expr',2,'p_expr_decright','Parser.py',258),
  ('expr -> ID INC','expr',2,'p_expr_incright','Parser.py',263),
  ('prlist -> STRING','prlist',1,'p_prlist_string','Parser.py',274),
  ('prlist -> prlist , expr','prlist',3,'p_prlist_prlexpr','Parser.py',278),
  ('prlist -> prlist , STRING','prlist',3,'p_prlist_prlstring','Parser.py',283),
  ('defn -> func procname ( arglist ) stmt','defn',6,'p_defn_func','Parser.py',291),
  ('defn -> proc procname ( arglist ) stmt','defn',6,'p_defn_proc','Parser.py',295),
  ('procname -> function','procname',1,'p_procname_function','Parser.py',306),
  ('procname -> procedure','procname',1,'p_procname_procedure','Parser.py',310),
  ('arglist -> empty','arglist',1,'p_arglist','Parser.py',316),
  ('arglist -> arglist , expr','arglist',3,'p_arglist_arglist','Parser.py',320),
  ('arglist -> expr','arglist',1,'p_arglist_expr','Parser.py',325),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',332),
  ('else -> ELSE','else',1,'p_else','Parser.py',345),
  ('return -> RETURN','return',1,'p_return','Parser.py',361),
]
